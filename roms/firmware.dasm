word enable_printing			% syscall 0
word print_char					% syscall 1
word 0 %prints						% syscall 2
word print_digit				% syscall 3
word print_integer				% syscall 4
word print_integer_decimal		% syscall 5
word print_integer_hex			% syscall 6
word print_integer_binary		% syscall 7
word div_rem					% syscall 8


alias output_ptr 0xfffc
alias print_pin	 0x3

enable_printing:
	pinmode_output print_pin
	return

print_char:
	set *output_ptr argument1
	
	set_pin_high print_pin
	set_pin_low  print_pin
	return

print_digit:
	set r0 10
	
	cmp r0 argument
	
	goto_if_nonpositive r0 digit_over_9
	
	goto digit_at_most_9
	
	digit_over_9:
		set r0 0x61
		add argument r0
		
		goto print_digit_print
		
	digit_at_most_9:
		set r0 0x30
		add argument r0
	
	print_digit_print:
		set *output_ptr argument
	
		set_pin_high print_pin
		set_pin_low  print_pin
		return

dealias all

alias base 		r0
alias number 	r1
alias tmp		r2
alias sp_saved  r3
alias sign 		r4
alias working 	r5
alias shifted   r6

print_integer:
	set number argument1
	set base   argument2

	set sp_saved sp
	
	push 0x0

	goto_if_zero number printeger_0
	
	set sign 0
	print_integer_calc_loop:
		goto_if_zero number printeger_finish

		set argument2 base

		call div_rem
		
		set number result1
	
		goto_if_nonzero sign printeger_oddcase
		
		inc sign
		set working result2
		add working 0x30
		
		goto_if_less working 0x3a print_integer_calc_loop
		
		add working 0x27

		goto print_integer_calc_loop
	printeger_oddcase:
		set sign 0
		shift working 8
		add working result2
		add working 0x30
		
		goto_if_less result2 0xa skip_adding_0x27

		add working 0x27

	skip_adding_0x27:
		push working
		goto print_integer_calc_loop
	
	printeger_0:
		push 0x30

		goto printeger_finish_oddcase

	printeger_finish:
		goto_if_zero sign printeger_finish_oddcase

		add working 0x0100
		push working
	printeger_finish_oddcase:
		set r0 sp
		prints *r0 PRINT_ADDR
		set sp sp_saved
		return

print_integer_decimal:
	set number argument1
	set base   0xa

	set sp_saved sp
	
	push 0x0

	goto_if_zero number printeger_0
	
	set sign 0
	print_integer_calc_loop_d:
		goto_if_zero number printeger_finish

		set argument2 base

		call div_rem
		
		set number result1
	
		goto_if_nonzero sign printeger_oddcase
		
		inc sign
		set working result2
		add working 0x30
		
		goto print_integer_calc_loop
	printeger_oddcase_d:
		set sign 0
		shift working 8
		add working result2
		add working 0x30
		
		push working
		goto print_integer_calc_loop
	
	printeger_0_d:
		push 0x30

		goto printeger_finish_oddcase

	printeger_finish_d:
		goto_if_zero sign printeger_finish_oddcase

		add working 0x0100
		push working
	printeger_finish_oddcase_d:
		set r0 sp
		prints *r0 PRINT_ADDR
		set sp sp_saved
		return

print_integer_hex:
	set number argument1

	set sp_saved sp
	
	push 0x0

	goto_if_zero number printeger_0_h
	
	set sign 0
	print_integer_calc_loop_h:
		goto_if_zero number printeger_finish_h

		set result2 number
		and result2 0xf
		shift number -4
	
		goto_if_nonzero sign printeger_oddcase_h
		
		inc sign
		set working result2
		add working 0x30
		
		goto_if_less working 0x3a print_integer_calc_loop_h
		
		add working 0x27

		goto print_integer_calc_loop_h
	printeger_oddcase_h:
		set sign 0
		shift working 8
		add working result2
		add working 0x30
		
		goto_if_less result2 0xa skip_adding_0x27_h

		add working 0x27

	skip_adding_0x27_h:
		push working
		goto print_integer_calc_loop_h
	
	printeger_0_h:
		push 0x30

		goto printeger_finish_oddcase_h

	printeger_finish_h:
		goto_if_zero sign printeger_finish_oddcase_h

		add working 0x0100
		push working
	printeger_finish_oddcase_h:
		set r0 sp
		prints *r0 PRINT_ADDR
		set sp sp_saved
		return

print_integer_binary:
	set number argument1

	set sp_saved sp
	
	push 0x0

	goto_if_zero number printeger_0_b
	
	set sign 0
	print_integer_calc_loop_b:
		goto_if_zero number printeger_finish_b

		set result2 number
		and result2 1
		shift number -1
	
		goto_if_nonzero sign printeger_oddcase_b
		
		inc sign
		set working result2
		add working 0x30
		
		goto print_integer_calc_loop_b
	printeger_oddcase_b:
		set sign 0
		shift working 8
		add working result2
		add working 0x30
		
		push working
		goto print_integer_calc_loop_b
	
	printeger_0_b:
		push 0x30

		goto printeger_finish_oddcase_b

	printeger_finish_b:
		goto_if_zero sign printeger_finish_oddcase_b

		add working 0x0100
		push working
	printeger_finish_oddcase_b:
		set r0 sp
		prints *r0 PRINT_ADDR
		set sp sp_saved
		return

alias m r0

div_rem:
	set m 0
	
	divrem_loop:
		
		goto_if_less_unsgn argument1 argument2 divrem_done
		
		inc m
		
		sub argument1 argument2
		
		goto divrem_loop
	
	divrem_done:
		goto_if_nonzero argument1 divrem_skip_final_increment
		
		inc m
		
	divrem_skip_final_increment:
		
		set result2 argument1
		set result1 m
			
		return
